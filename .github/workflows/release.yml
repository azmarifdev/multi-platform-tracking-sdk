name: 🚀 Professional Release

on:
    push:
        tags:
            - 'v*'

permissions:
    contents: write
    packages: write

jobs:
    release:
        name: 🏷️ Create Professional Release
        runs-on: ubuntu-latest

        steps:
            - name: 📥 Checkout Repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 🏷️ Extract Version Info
              id: version
              run: |
                  VERSION=${GITHUB_REF#refs/tags/}
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

                  # Determine release type
                  if [[ $VERSION == *"alpha"* ]]; then
                    echo "prerelease=true" >> $GITHUB_OUTPUT
                    echo "release_type=🧪 Alpha Release" >> $GITHUB_OUTPUT
                  elif [[ $VERSION == *"beta"* ]]; then
                    echo "prerelease=true" >> $GITHUB_OUTPUT
                    echo "release_type=🧪 Beta Release" >> $GITHUB_OUTPUT
                  elif [[ $VERSION == *"rc"* ]]; then
                    echo "prerelease=true" >> $GITHUB_OUTPUT
                    echo "release_type=🔄 Release Candidate" >> $GITHUB_OUTPUT
                  else
                    echo "prerelease=false" >> $GITHUB_OUTPUT
                    echo "release_type=✅ Stable Release" >> $GITHUB_OUTPUT
                  fi

            - name: 📋 Generate Enhanced Changelog
              id: changelog
              run: |
                  echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT

                  # Get previous tag
                  PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

                  if [ -z "$PREV_TAG" ]; then
                    echo "🎉 **Initial Release**" >> $GITHUB_OUTPUT
                    echo "" >> $GITHUB_OUTPUT
                    echo "This is the first release of Multi-Platform Tracking SDK!" >> $GITHUB_OUTPUT
                  else
                    echo "📝 **Changes since $PREV_TAG:**" >> $GITHUB_OUTPUT
                    echo "" >> $GITHUB_OUTPUT
                    
                    # Categorize commits
                    git log --pretty=format:"- %s" $PREV_TAG..HEAD | while read line; do
                      if [[ $line == *"feat"* ]] || [[ $line == *"add"* ]]; then
                        echo "✨ $line" >> $GITHUB_OUTPUT
                      elif [[ $line == *"fix"* ]]; then
                        echo "🐛 $line" >> $GITHUB_OUTPUT
                      elif [[ $line == *"docs"* ]]; then
                        echo "📚 $line" >> $GITHUB_OUTPUT
                      elif [[ $line == *"perf"* ]]; then
                        echo "⚡ $line" >> $GITHUB_OUTPUT
                      elif [[ $line == *"test"* ]]; then
                        echo "🧪 $line" >> $GITHUB_OUTPUT
                      elif [[ $line == *"ci"* ]] || [[ $line == *"build"* ]]; then
                        echo "🔧 $line" >> $GITHUB_OUTPUT
                      else
                        echo "📦 $line" >> $GITHUB_OUTPUT
                      fi
                    done
                  fi

                  echo "EOF" >> $GITHUB_OUTPUT

            - name: 📊 Generate Release Statistics
              id: stats
              run: |
                  # Count files
                  FILE_COUNT=$(find src -name "*.ts" | wc -l)
                  echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT

                  # Count lines of code
                  LOC=$(find src -name "*.ts" -exec wc -l {} + | tail -1 | awk '{print $1}')
                  echo "lines_of_code=$LOC" >> $GITHUB_OUTPUT

                  # Package size (approximate)
                  PACKAGE_SIZE="74.0 kB"
                  echo "package_size=$PACKAGE_SIZE" >> $GITHUB_OUTPUT

            - name: 🎯 Create Professional GitHub Release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.version.outputs.version }}
                  name: '${{ steps.version.outputs.release_type }} Multi-Platform Tracking SDK ${{ steps.version.outputs.version }}'
                  body: |
                      # 🚀 Multi-Platform Tracking SDK ${{ steps.version.outputs.version }}

                      > **${{ steps.version.outputs.release_type }}** - Professional analytics SDK for modern applications

                      ![Version](https://img.shields.io/badge/version-${{ steps.version.outputs.version_number }}-blue)
                      ![NPM](https://img.shields.io/badge/npm-published-green)
                      ![TypeScript](https://img.shields.io/badge/TypeScript-Ready-blue)
                      ![Tests](https://img.shields.io/badge/tests-44%2F44%20passing-brightgreen)

                      ## 📦 Quick Installation

                      ```bash
                      # NPM
                      npm install @azmarifdev/multi-platform-tracking-sdk

                      # Yarn
                      yarn add @azmarifdev/multi-platform-tracking-sdk

                      # PNPM  
                      pnpm add @azmarifdev/multi-platform-tracking-sdk
                      ```

                      ## 🆕 What's New

                      ${{ steps.changelog.outputs.CHANGELOG }}

                      ## ✨ Platform Support Matrix

                      | Platform | Status | Key Features |
                      |----------|:------:|--------------|
                      | 📘 **Facebook/Meta** | ✅ | Pixel tracking, Conversion API, Server-side events |
                      | 📸 **Instagram** | ✅ | Stories, Reels, Shopping events, Engagement tracking |
                      | 🏷️ **Google Tag Manager** | ✅ | Enhanced ecommerce, Custom events, Debug tools |
                      | 🔧 **Developer Experience** | ✅ | Full TypeScript, Zero dependencies, Modern ESM |

                      ## 🚀 Quick Start Examples

                      ### Meta Pixel Tracking
                      ```typescript
                      import { MetaPixelTracker } from '@azmarifdev/multi-platform-tracking-sdk';

                      const tracker = new MetaPixelTracker({
                        pixelId: 'YOUR_PIXEL_ID',
                        debug: true
                      });

                      // Track page view
                      tracker.track('PageView');

                      // Track purchase
                      tracker.track('Purchase', {
                        value: 29.99,
                        currency: 'USD'
                      });
                      ```

                      ### Instagram Engagement
                      ```typescript
                      import { InstagramTracker } from '@azmarifdev/multi-platform-tracking-sdk';

                      const instaTracker = new InstagramTracker({
                        pixelId: 'YOUR_PIXEL_ID'
                      });

                      // Track story interaction
                      instaTracker.trackStoryView('story_123');
                      instaTracker.trackStoryComplete('story_123');

                      // Track shopping events
                      instaTracker.trackShoppingEvent('view_product', {
                        productId: 'prod_456',
                        category: 'Electronics'
                      });
                      ```

                      ### Server-Side Conversion API
                      ```typescript
                      import { MetaConversionTracker } from '@azmarifdev/multi-platform-tracking-sdk';

                      const conversionTracker = new MetaConversionTracker({
                        pixelId: 'YOUR_PIXEL_ID',
                        accessToken: 'YOUR_ACCESS_TOKEN',
                        testEventCode: 'TEST12345' // For testing
                      });

                      // Server-side purchase tracking
                      await conversionTracker.trackPurchase(99.99, 'USD', {
                        email: 'customer@example.com',
                        phone: '+1234567890'
                      });
                      ```

                      ## 📊 Release Statistics

                      - **📁 TypeScript Files**: ${{ steps.stats.outputs.file_count }} files
                      - **📏 Lines of Code**: ${{ steps.stats.outputs.lines_of_code }} lines
                      - **📦 Package Size**: ${{ steps.stats.outputs.package_size }} compressed
                      - **🧪 Test Coverage**: 44/44 tests passing
                      - **🔧 Dependencies**: Zero external dependencies

                      ## 🌍 Browser & Node.js Support

                      ### Node.js Environments
                      - ✅ Node.js 18.x LTS
                      - ✅ Node.js 20.x Current
                      - ✅ Server-side rendering (SSR)
                      - ✅ Edge runtime compatible

                      ### Browser Support
                      - ✅ Chrome 88+
                      - ✅ Firefox 85+
                      - ✅ Safari 14+
                      - ✅ Edge 88+
                      - ✅ Mobile browsers (iOS/Android)

                      ## 🛡️ Security & Privacy

                      - 🔒 **No eval()**: Secure code execution
                      - 🛡️ **GDPR Compliant**: Built-in privacy controls
                      - 🔐 **Data Hashing**: Automatic PII protection
                      - ✅ **CSP Compatible**: Content Security Policy friendly

                      ## 📚 Documentation & Resources

                      | Resource | Link |
                      |----------|------|
                      | 📖 **Documentation** | [View Docs](https://github.com/azmarifdev/multi-platform-tracking-sdk#readme) |
                      | 🎯 **API Reference** | [API Docs](https://github.com/azmarifdev/multi-platform-tracking-sdk/blob/main/docs/API.md) |
                      | 💡 **Examples** | [Code Examples](https://github.com/azmarifdev/multi-platform-tracking-sdk/tree/main/examples) |
                      | 🐛 **Issues** | [Report Bug](https://github.com/azmarifdev/multi-platform-tracking-sdk/issues) |
                      | 💬 **Discussions** | [Community](https://github.com/azmarifdev/multi-platform-tracking-sdk/discussions) |
                      | 🚀 **Changelog** | [View Changes](https://github.com/azmarifdev/multi-platform-tracking-sdk/blob/main/CHANGELOG.md) |

                      ## 💝 Support the Project

                      If this SDK helps your project, consider:
                      - ⭐ **Star the repository**
                      - 🐛 **Report issues** and suggest improvements
                      - 📖 **Contribute to documentation**
                      - 💬 **Share with the community**

                      ---

                      **Built with ❤️ for the JavaScript ecosystem**  
                      Created by [@azmarifdev](https://github.com/azmarifdev) | Licensed under MIT

                      ![NPM Downloads](https://img.shields.io/npm/dm/@azmarifdev/multi-platform-tracking-sdk)
                      ![GitHub Stars](https://img.shields.io/github/stars/azmarifdev/multi-platform-tracking-sdk)
                      ![License](https://img.shields.io/badge/license-MIT-blue)
                  draft: false
                  prerelease: ${{ steps.version.outputs.prerelease }}
                  make_latest: ${{ steps.version.outputs.prerelease == 'false' }}
                  generate_release_notes: false
